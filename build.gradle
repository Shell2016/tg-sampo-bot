import org.springframework.boot.gradle.tasks.bundling.BootBuildImage

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.6'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "io.freefair.lombok" version "6.6.1"
}
apply from: 'version.gradle'

group = 'ru.michaelshell'
version = '1.4.3'
sourceCompatibility = '17'

configurations {
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation "org.telegram:telegrambots-spring-boot-starter:${versions.telegrambots}"
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation "com.google.apis:google-api-services-sheets:${versions.googlesheets}"
    implementation "com.google.auth:google-auth-library-oauth2-http:${versions.googleoauth2}"
    implementation 'org.springframework.data:spring-data-redis'
    implementation 'redis.clients:jedis'
    implementation 'org.liquibase:liquibase-core'
    implementation 'com.github.loki4j:loki-logback-appender:1.5.2'

    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.testcontainers:postgresql:${versions.testcontainers}"
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register("bootBuildImageWithVersionTag", BootBuildImage) {
    archiveFile.set(tasks.named("bootJar").get().archiveFile)
    imageName = "shell2016/sampobotservice:${version}"
    publish = true
    docker {
        publishRegistry {
            username = System.getenv("DOCKER_USERNAME")
            password = System.getenv("DOCKER_PASSWORD")
        }
    }
}

tasks.register("bootBuildImageWithLatestTag", BootBuildImage) {
    archiveFile.set(tasks.named("bootJar").get().archiveFile)
    imageName = "shell2016/sampobotservice:latest"
    publish = true
    docker {
        publishRegistry {
            username = System.getenv("DOCKER_USERNAME")
            password = System.getenv("DOCKER_PASSWORD")
        }
    }
}

tasks.register("bootBuildAndPushImages") {
    dependsOn "bootBuildImageWithVersionTag", "bootBuildImageWithLatestTag"
}